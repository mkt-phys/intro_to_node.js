'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _regexp = require('./regexp');

var _regexp2 = _interopRequireDefault(_regexp);

var _constants = require('./constants');

var _deviceInfo = require('./device-info');

var _deviceInfo2 = _interopRequireDefault(_deviceInfo);

var _matchUtils = require('./match-utils');

var _engineParser = require('./engine-parser');

var WindowsDeviceInfo = (function (_DeviceInfo) {
  function WindowsDeviceInfo(ua) {
    _classCallCheck(this, WindowsDeviceInfo);

    _get(Object.getPrototypeOf(WindowsDeviceInfo.prototype), 'constructor', this).call(this, ua);
    this.initXPServicePack();
  }

  _inherits(WindowsDeviceInfo, _DeviceInfo);

  _createClass(WindowsDeviceInfo, [{
    key: 'initXPServicePack',

    /**
     * @returns {void}
     */
    value: function initXPServicePack() {
      if (this.os.version === '5.1' /* XP */) {
        var securityVer = this.ua.match(/\bwindows\snt\b\s.*?;\s(sv\d)?;?/i)[1];
        if (securityVer === 'SV1') {
          this.servicePack = 'SP2';
        }
      }
    }
  }, {
    key: 'browser',

    /**
     * @returns {cwua.BrowserInfo}
     */
    get: function get() {
      var ie = this.ua.match(/msie\s([\d\.]+);/i);
      if (ie) {
        var version = ie[1];
        return {
          name: 'Internet Explorer',
          version: version,
          major: parseInt(version.split('.')[0], 10)
        };
      }

      var ie11 = this.ua.match(/trident.+rv[:\s]([\d\.]+).+like\sgecko/i);
      if (ie11) {
        var version = ie11[1];
        return {
          name: 'Internet Explorer',
          version: version,
          major: parseInt(version.split('.')[0], 10)
        };
      }

      var firefox = this.ua.match(/\bfirefox\/([\d\.]+)/i);
      if (firefox) {
        var version = firefox[1];
        return {
          name: 'Firefox',
          version: version,
          major: parseInt(version.split('.')[0], 10)
        };
      }

      var chrome = this.ua.match(/\bchrome\/([\d\.]+)\s/i);
      return {
        name: 'Chrome',
        version: chrome[1],
        major: parseInt(chrome[1].split('.')[0], 10)
      };
    }
  }, {
    key: 'engine',

    /**
     * @returns {cwua.EngineInfo}
     */
    get: function get() {
      if (this.browser.name === 'Internet Explorer') {
        var trident = this.ua.match(/\btrident\/([\d\.]+)/i);
        var engineInfo = {
          name: 'Trident'
        };

        if (trident) {
          engineInfo.version = trident[1];
        }

        return engineInfo;
      }

      if (this.browser.name === 'Firefox') {
        return (0, _engineParser.parseEngine)(this.ua);
      }

      var webkit = this.ua.match(/\bapplewebKit\/([\d\.]+)/i);
      return {
        name: 'WebKit',
        version: webkit[1]
      };
    }
  }, {
    key: 'os',

    /**
     * @returns {cwua.OsInfo}
     */
    get: function get() {
      var raw = this.ua.match(/\bwindows\snt\b\s([\d\.]+)/i)[1];
      var verArr = raw.split('.');
      var ntVersion = verArr.join('.');

      var osInfo = {
        name: 'Windows NT',
        version: ntVersion,
        major: parseInt(verArr[0], 10),
        minor: parseInt(verArr[1], 10)
      };
      if (verArr[2] !== void 0 && verArr[2] !== null) {
        osInfo.patch = parseInt(verArr[2], 10);
      }

      return osInfo;
    }
  }, {
    key: 'device',

    /**
     * @returns {string}
     */
    get: function get() {
      var _this = this;

      /* eslint-disable no-multi-spaces, complexity */
      var type = (function () {
        if ((0, _matchUtils.match)(_regexp2['default'].windows.pc, _this.ua)) {
          return _constants.device.pc;
        }
      })();
      /* eslint-enable no-multi-spaces, complexity */

      return {
        type: type
      };
    }
  }]);

  return WindowsDeviceInfo;
})(_deviceInfo2['default']);

exports['default'] = WindowsDeviceInfo;
module.exports = exports['default'];