'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _regexp = require('./regexp');

var _regexp2 = _interopRequireDefault(_regexp);

var _constants = require('./constants');

var _deviceInfo = require('./device-info');

var _deviceInfo2 = _interopRequireDefault(_deviceInfo);

var _matchUtils = require('./match-utils');

var AndroidDeviceInfo = (function (_DeviceInfo) {
  function AndroidDeviceInfo(ua) {
    _classCallCheck(this, AndroidDeviceInfo);

    _get(Object.getPrototypeOf(AndroidDeviceInfo.prototype), 'constructor', this).call(this, ua);
  }

  _inherits(AndroidDeviceInfo, _DeviceInfo);

  _createClass(AndroidDeviceInfo, [{
    key: 'browser',

    /**
     * @returns {cwua.BrowserInfo}
     */
    get: function get() {
      var androidBrowser = this.ua.match(/android.+version\/([\d\.]+)\s+(?:mobile\s?safari|safari)/i);

      if (androidBrowser) {
        var version = androidBrowser[1];
        return {
          name: 'Android Browser',
          version: version,
          major: parseInt(version.split('.')[0], 10)
        };
      }

      var chrome = this.ua.match(/\bChrome\/([\d\.]+)\s/);

      return {
        name: 'Chrome',
        version: chrome[1],
        major: parseInt(chrome[1].split('.')[0], 10)
      };
    }
  }, {
    key: 'engine',

    /**
     * @returns {cwua.EngineInfo}
     */
    get: function get() {
      var version = this.ua.match(/\bAppleWebKit\/(\d+\.\d+(\.\d+)?)/)[1];

      return {
        name: 'WebKit',
        version: version
      };
    }
  }, {
    key: 'os',

    /**
     * @returns {cwua.OsInfo}
     */
    get: function get() {
      var raw = this.ua.match(/\bAndroid\b\s(\d\.\d(\.\d)?);/)[1];
      var verArr = raw.split('.');

      var osInfo = {
        name: 'Android',
        version: verArr.join('.'),
        major: parseInt(verArr[0], 10),
        minor: parseInt(verArr[1], 10)
      };
      if (verArr[2] !== void 0 && verArr[2] !== null) {
        osInfo.patch = parseInt(verArr[2], 10);
      }

      return osInfo;
    }
  }, {
    key: 'device',

    /**
     * @returns {string}
     */
    get: function get() {
      var _this = this;

      /* eslint-disable no-multi-spaces, complexity */
      var type = (function () {
        if ((0, _matchUtils.match)(_regexp2['default'].android.phone, _this.ua)) {
          return _constants.device.mobile;
        }
        if ((0, _matchUtils.match)(_regexp2['default'].android.tablet, _this.ua)) {
          return _constants.device.tablet;
        }
      })();
      /* eslint-enable no-multi-spaces, complexity */

      return {
        type: type
      };
    }
  }]);

  return AndroidDeviceInfo;
})(_deviceInfo2['default']);

exports['default'] = AndroidDeviceInfo;
module.exports = exports['default'];